// Code generated by protoc-gen-go. DO NOT EDIT.
// source: header.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/william-lg/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version struct {
	Major                *int32   `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Mior                 *int32   `protobuf:"varint,2,opt,name=mior" json:"mior,omitempty"`
	Revision             *int32   `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_header_52e3a23d62cf1758, []int{0}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetMajor() int32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return 0
}

func (m *Version) GetMior() int32 {
	if m != nil && m.Mior != nil {
		return *m.Mior
	}
	return 0
}

func (m *Version) GetRevision() int32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type ReqHeader struct {
	SeqId                *int64   `protobuf:"varint,1,opt,name=seq_id,json=seqId" json:"seq_id,omitempty"`
	Version              *Version `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	CallerId             *int64   `protobuf:"varint,3,opt,name=caller_id,json=callerId" json:"caller_id,omitempty"`
	CallerName           *string  `protobuf:"bytes,4,opt,name=caller_name,json=callerName" json:"caller_name,omitempty"`
	CallerIp             *string  `protobuf:"bytes,5,opt,name=caller_ip,json=callerIp" json:"caller_ip,omitempty"`
	Timestamp            *int64   `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
	Token                *string  `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqHeader) Reset()         { *m = ReqHeader{} }
func (m *ReqHeader) String() string { return proto.CompactTextString(m) }
func (*ReqHeader) ProtoMessage()    {}
func (*ReqHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_header_52e3a23d62cf1758, []int{1}
}
func (m *ReqHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqHeader.Unmarshal(m, b)
}
func (m *ReqHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqHeader.Marshal(b, m, deterministic)
}
func (dst *ReqHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqHeader.Merge(dst, src)
}
func (m *ReqHeader) XXX_Size() int {
	return xxx_messageInfo_ReqHeader.Size(m)
}
func (m *ReqHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ReqHeader proto.InternalMessageInfo

func (m *ReqHeader) GetSeqId() int64 {
	if m != nil && m.SeqId != nil {
		return *m.SeqId
	}
	return 0
}

func (m *ReqHeader) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ReqHeader) GetCallerId() int64 {
	if m != nil && m.CallerId != nil {
		return *m.CallerId
	}
	return 0
}

func (m *ReqHeader) GetCallerName() string {
	if m != nil && m.CallerName != nil {
		return *m.CallerName
	}
	return ""
}

func (m *ReqHeader) GetCallerIp() string {
	if m != nil && m.CallerIp != nil {
		return *m.CallerIp
	}
	return ""
}

func (m *ReqHeader) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ReqHeader) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "example.Version")
	proto.RegisterType((*ReqHeader)(nil), "example.ReqHeader")
}

func init() { proto.RegisterFile("header.proto", fileDescriptor_header_52e3a23d62cf1758) }

var fileDescriptor_header_52e3a23d62cf1758 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x4f, 0xbd, 0x6e, 0xea, 0x30,
	0x14, 0xbe, 0x06, 0x42, 0xc8, 0xe1, 0x0e, 0xc8, 0xea, 0x60, 0xb5, 0xa8, 0x89, 0x50, 0x07, 0x16,
	0x82, 0xc4, 0xd6, 0x95, 0xa9, 0x2c, 0x1d, 0x32, 0x74, 0xad, 0x5c, 0x72, 0x04, 0x6e, 0xed, 0x38,
	0x71, 0xdc, 0xb4, 0x6f, 0x8b, 0xc4, 0x0b, 0xf4, 0x15, 0xaa, 0xd8, 0x81, 0x22, 0x36, 0xfb, 0xfb,
	0x3f, 0xf0, 0x7f, 0x8f, 0x3c, 0x47, 0x93, 0x96, 0x46, 0x5b, 0x4d, 0x43, 0xfc, 0xe6, 0xaa, 0x94,
	0x78, 0xfb, 0xb8, 0x13, 0x76, 0xff, 0xf9, 0x96, 0x6e, 0xb5, 0x5a, 0x7e, 0x09, 0x29, 0x05, 0x57,
	0x0b, 0xb9, 0x5b, 0xee, 0xf4, 0xc2, 0x09, 0x17, 0x0d, 0x97, 0x22, 0xe7, 0x56, 0x9b, 0x7a, 0x79,
	0x7e, 0xfa, 0x8c, 0x99, 0x82, 0xf0, 0x05, 0x4d, 0x2d, 0x74, 0x41, 0xef, 0x21, 0x50, 0xfc, 0x5d,
	0x1b, 0x46, 0x12, 0x32, 0x0f, 0xd6, 0xa3, 0xe3, 0x21, 0x1e, 0x4c, 0xfe, 0x25, 0x24, 0xf3, 0x30,
	0x9d, 0xc2, 0x40, 0x09, 0x6d, 0x58, 0xef, 0x8a, 0x76, 0x28, 0x7d, 0x80, 0x91, 0xc1, 0x46, 0xb4,
	0x49, 0xac, 0x7f, 0xa5, 0x38, 0x33, 0xb3, 0x1f, 0x02, 0x51, 0x86, 0xd5, 0x93, 0x3b, 0x83, 0xc6,
	0x30, 0xac, 0xb1, 0x7a, 0x15, 0xb9, 0xab, 0xec, 0x5f, 0x56, 0xd6, 0x58, 0x6d, 0x72, 0xba, 0x82,
	0xb0, 0xf1, 0xeb, 0x5c, 0xeb, 0x78, 0x35, 0x49, 0xbb, 0x9b, 0xd3, 0x6e, 0xf5, 0x7a, 0x78, 0x3c,
	0xc4, 0xbd, 0x84, 0x64, 0x27, 0x21, 0xbd, 0x83, 0x68, 0xcb, 0xa5, 0x44, 0xd3, 0xe6, 0xb6, 0x4b,
	0xfa, 0xd9, 0xc8, 0x03, 0x9b, 0x9c, 0xc6, 0x30, 0xee, 0xc8, 0x82, 0x2b, 0x64, 0x83, 0x84, 0xcc,
	0xa3, 0x0c, 0x3c, 0xf4, 0xcc, 0x15, 0x5e, 0xba, 0x4b, 0x16, 0x38, 0xfa, 0xe4, 0x2e, 0xe9, 0x14,
	0x22, 0x2b, 0x14, 0xd6, 0x96, 0xab, 0x92, 0x0d, 0x5d, 0xf4, 0x1f, 0x40, 0x6f, 0x20, 0xb0, 0xfa,
	0x03, 0x0b, 0x16, 0x3a, 0x9b, 0xff, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x86, 0x7f, 0x30,
	0xb3, 0x01, 0x00, 0x00,
}
